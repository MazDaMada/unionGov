version: "3.3"

services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=mail@tandabany.fr"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  db:
    image: postgres:latest
    volumes:
      - /home/sattisvar/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_HOST}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  migration:
    build: .
    image: app
    command: bash -c "
        pipenv run python unionGov/manage.py makemigrations
        && pipenv run python unionGov/manage.py migrate 
        && pipenv run python unionGov/manage.py loaddata --app gov default"
    volumes:
      - .:/code
    environment:
      - API_HOST=api
    links:
      - db
    depends_on: 
      - db
  api:
    image: app
    command: pipenv run python unionGov/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    environment:
      - API_HOST=api
    ports:
      - "8000:8000"
    links:
      - db
    depends_on:
      - migration

  front:
    build: frontend
    ports:
      - "3000:3000"
    labels:
      - "traefik.http.services.front.loadbalancer.server.port=3000" # Container port
      - "traefik.http.routers.front.rule=Host(`uniongov.tandabany.fr`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls.certresolver=myresolver"
